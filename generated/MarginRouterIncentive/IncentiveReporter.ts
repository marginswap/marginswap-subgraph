// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddToClaim extends ethereum.Event {
  get params(): AddToClaim__Params {
    return new AddToClaim__Params(this);
  }
}

export class AddToClaim__Params {
  _event: AddToClaim;

  constructor(event: AddToClaim) {
    this._event = event;
  }

  get topic(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get claimant(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubtractFromClaim extends ethereum.Event {
  get params(): SubtractFromClaim__Params {
    return new SubtractFromClaim__Params(this);
  }
}

export class SubtractFromClaim__Params {
  _event: SubtractFromClaim;

  constructor(event: SubtractFromClaim) {
    this._event = event;
  }

  get topic(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get claimant(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IncentiveReporter extends ethereum.SmartContract {
  static bind(address: Address): IncentiveReporter {
    return new IncentiveReporter("IncentiveReporter", address);
  }
}
